esphome:
  name: dalila-relay
  friendly_name: Dalila_Relay

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: ""

ota:
  - platform: esphome
    password: ""

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Dalila-Relay Fallback Hotspot"
    password: "zCSsUoXRKUaA"

captive_portal:

# Definição de variáveis globais para os estados dos relés
globals:
  - id: relay1_enabled
    type: bool
    restore_value: no
    initial_value: 'false'  # Inicializa o Relé 1 como desligado
  - id: relay2_enabled
    type: bool
    restore_value: no
    initial_value: 'false'  # Inicializa o Relé 2 como desligado
  - id: relay3_enabled
    type: bool
    restore_value: no
    initial_value: 'false'  # Inicializa o Relé 3 como desligado
  - id: relay4_enabled
    type: bool
    restore_value: no
    initial_value: 'false'  # Inicializa o Relé 4 como desligado

  - id: relay1_on_time
    type: int
    restore_value: no
    initial_value: "1000"  # Tempo de 1 segundo para o Relé 1
  - id: relay2_on_time
    type: int
    restore_value: no
    initial_value: "1000"  # Tempo de 1 segundo para o Relé 2
  - id: relay3_on_time
    type: int
    restore_value: no
    initial_value: "1000"  # Tempo de 1 segundo para o Relé 3
  - id: relay4_on_time
    type: int
    restore_value: no
    initial_value: "1000"  # Tempo de 1 segundo para o Relé 4
  - id: relay1_off_time
    type: int
    restore_value: no
    initial_value: "1000"  # Tempo de 1 segundo para o Relé 1
  - id: relay2_off_time
    type: int
    restore_value: no
    initial_value: "1000"  # Tempo de 1 segundo para o Relé 2
  - id: relay3_off_time
    type: int
    restore_value: no
    initial_value: "1000"  # Tempo de 1 segundo para o Relé 3
  - id: relay4_off_time
    type: int
    restore_value: no
    initial_value: "1000"  # Tempo de 1 segundo para o Relé 4



# Relés configurados como saídas GPIO
switch:
  - platform: gpio
    name: "Relay 1"
    pin: GPIO25
    id: relay1_switch
  - platform: gpio
    name: "Relay 2"
    pin: GPIO26
    id: relay2_switch
  - platform: gpio
    name: "Relay 3"
    pin: GPIO33
    id: relay3_switch
  - platform: gpio
    name: "Relay 4"
    pin: GPIO32
    id: relay4_switch

# Switches para ativar/desativar a funcionalidade intermitente de cada relê
  - platform: template
    name: "Enable Relay 1 Intermittent"
    id: enable_relay1
    lambda: |-
      return id(relay1_enabled);
    turn_on_action:
      then:
        - lambda: |-
            id(relay1_enabled) = true;
    turn_off_action:
      then:
        - lambda: |-
            id(relay1_enabled) = false;

  - platform: template
    name: "Enable Relay 2 Intermittent"
    id: enable_relay2
    lambda: |-
      return id(relay2_enabled);
    turn_on_action:
      then:
        - lambda: |-
            id(relay2_enabled) = true;
    turn_off_action:
      then:
        - lambda: |-
            id(relay2_enabled) = false;

  - platform: template
    name: "Enable Relay 3 Intermittent"
    id: enable_relay3
    lambda: |-
      return id(relay3_enabled);
    turn_on_action:
      then:
        - lambda: |-
            id(relay3_enabled) = true;
    turn_off_action:
      then:
        - lambda: |-
            id(relay3_enabled) = false;

  - platform: template
    name: "Enable Relay 4 Intermittent"
    id: enable_relay4
    lambda: |-
      return id(relay4_enabled);
    turn_on_action:
      then:
        - lambda: |-
            id(relay4_enabled) = true;
    turn_off_action:
      then:
        - lambda: |-
            id(relay4_enabled) = false;




